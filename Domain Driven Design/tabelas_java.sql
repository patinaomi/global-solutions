-- Drop das Tabelas
DROP TABLE Form_Feedback CASCADE CONSTRAINTS;
DROP TABLE Investidor CASCADE CONSTRAINTS;
DROP TABLE Login CASCADE CONSTRAINTS;
DROP TABLE Ocorrencia CASCADE CONSTRAINTS;
DROP TABLE Animal CASCADE CONSTRAINTS;
DROP TABLE Condicao_Animal CASCADE CONSTRAINTS;
DROP TABLE Newsletter CASCADE CONSTRAINTS;
DROP TABLE Usuario CASCADE CONSTRAINTS;
DROP TABLE Tipo_Residuo CASCADE CONSTRAINTS;
DROP TABLE Tipo_Usuario CASCADE CONSTRAINTS;
DROP TABLE Visitante CASCADE CONSTRAINTS;
DROP TABLE Endereco CASCADE CONSTRAINTS;
DROP TABLE Estado CASCADE CONSTRAINTS;

-- DDL - Criação das tabelas
-- Visitante
CREATE TABLE Visitante (
  id_visitante INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  hora_entrada_vis TIMESTAMP,
  hora_saida_vis TIMESTAMP
);

-- Tipo_Usuario
CREATE TABLE Tipo_Usuario (
  id_tipo_usuario INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  desc_tipo_usuario VARCHAR2(80) NOT NULL
);

-- Usuario
CREATE TABLE Usuario (
  id_usuario INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  nome_usuario VARCHAR2(80) NOT NULL,
  sobrenome_usuario VARCHAR2(80) NOT NULL,
  email_usuario VARCHAR2(80) UNIQUE NOT NULL,
  senha_usuario VARCHAR2(80) NOT NULL,
  tel_usuario VARCHAR2(30) NOT NULL,
  id_visitante INTEGER REFERENCES Visitante(id_visitante),
  id_tipo_usuario INTEGER REFERENCES Tipo_Usuario(id_tipo_usuario)
);

-- Login
CREATE TABLE Login (
  id_login INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  email_login VARCHAR2(80) NOT NULL,
  senha_login VARCHAR2(80) NOT NULL,
  data_login TIMESTAMP NOT NULL,
  id_visitante INTEGER REFERENCES Visitante(id_visitante)
);

-- Condicao_Animal
CREATE TABLE Condicao_Animal (
  id_condicao INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  desc_condicao VARCHAR2(80) NOT NULL
);

-- Animal
CREATE TABLE Animal (
  id_animal INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  nome_animal VARCHAR2(90),
  especie_animal VARCHAR2(120),
  desc_animal VARCHAR2(255),
  id_condicao INTEGER NOT NULL REFERENCES Condicao_Animal(id_condicao)
);

-- Tipo_Residuo
CREATE TABLE Tipo_Residuo (
  id_tipo_residuo INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  nome_tipo_residuo VARCHAR2(90) NOT NULL,
  desc_tipo_residuo VARCHAR2(120) NOT NULL
);

-- Estado
CREATE TABLE Estado (
  id_estado INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  nome_estado VARCHAR2(50) NOT NULL,
  sigla_estado VARCHAR2(2) NOT NULL
);

-- Endereco
CREATE TABLE Endereco (
  id_end INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,  
  rua_end VARCHAR2(255) NOT NULL,
  bairro_end VARCHAR2(255) NOT NULL,
  cep_end VARCHAR2(20) NOT NULL,
  cidade_end VARCHAR2(80) NOT NULL,
  id_estado INTEGER NOT NULL REFERENCES Estado(id_estado)
);


-- Ocorrencia
-- Ocorrencia
CREATE TABLE Ocorrencia (
  id_solicitacao INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  nome_ocorr VARCHAR2(255),
  tel_ocorr VARCHAR2(30),
  email_ocorr VARCHAR2(80),
  lat_ocorr VARCHAR2(50),
  long_ocorr VARCHAR2(50),
  img_ocorr VARCHAR2(255), -- url da imagem
  data_solicitacao TIMESTAMP NOT NULL,
  msg_ocorr VARCHAR2(255),
  status_ocorr CHAR(1) NOT NULL CHECK (status_ocorr IN ('0', '1')),
  id_visitante INTEGER REFERENCES Visitante(id_visitante),
  id_animal INTEGER REFERENCES Animal(id_animal),
  id_tipo_residuo INTEGER REFERENCES Tipo_Residuo(id_tipo_residuo),
  id_endereco INTEGER REFERENCES Endereco(id_end)
);

-- Investidor
CREATE TABLE Investidor (
  id_investidor INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  nome_inv VARCHAR2(80) NOT NULL,
  email_inv VARCHAR2(80) NOT NULL,
  telefone_inv VARCHAR2(30) NOT NULL,
  nome_empresa_inv VARCHAR2(80) NOT NULL,
  quantia_contribuida_inv DECIMAL(10, 2) NOT NULL,
  data_investimento_inv TIMESTAMP NOT NULL,
  msg_inv VARCHAR2(80) NOT NULL,
  id_visitante INTEGER REFERENCES Visitante(id_visitante)
);

-- Form_Feedback
CREATE TABLE Form_Feedback (
  id_feedback INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  nome_feedback VARCHAR2(80) NOT NULL,
  tel_feedback VARCHAR2(30) NOT NULL,
  email_feedback VARCHAR2(80) NOT NULL,
  msg_feedback VARCHAR2(255) NOT NULL,
  nota_feedback NUMBER(1) CHECK (nota_feedback BETWEEN 1 AND 5),
  data_feedback TIMESTAMP NOT NULL,
  id_visitante INTEGER REFERENCES Visitante(id_visitante)
);

-- Newsletter
CREATE TABLE Newsletter (
  id_news INTEGER GENERATED BY DEFAULT AS IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY,
  email_news VARCHAR2(80) NOT NULL,
  data_envio_news TIMESTAMP NOT NULL,
  status_news CHAR(1) NOT NULL CHECK (status_news IN ('0', '1')),
  id_visitante INTEGER REFERENCES Visitante(id_visitante)
);

-- Inserts para a GLOBAL
  
 
